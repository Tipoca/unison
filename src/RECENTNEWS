CHANGES FROM VERSION 2.35.-17

* Fixed bug resulting in slow performances when transferring a file
  using our rsync implementation from a 64-bit architecture to a
  32-bit architecture.

-------------------------------
CHANGES FROM VERSION 2.35.-17

* Bumped minor version: many incompatible protocol changes

* Message lengths are checksummed to guard against protocol corruption
  (no more [Invalid_argument "String.create"])

* Experimental streaming protocol for transferring file contents (can
  be disabled by setting the directive "stream" to false): file
  contents is transfered asynchronously (without waiting for a response
  from the destination after each chunk sent) rather than using the
  synchronous RPC mechanism.  As a consequence:
  - Unison now transfers the contents of a single file at a time
    (Unison used to transfer several contents simultaneously in order
    to hide the connection latency.)
  - the transfer of large files uses the full available bandwidth
    and is not slowed done due to the connection latency anymore
  - we get performance improvement for small files as well by
    scheduling many files simultaneously (as scheduling a file for
    transfer consume little ressource: it does not mean allocating a
    large buffer anymore)

* Improvement to the code for resuming directory transfers:
  - if a file was not correctly transferred (or the source has been
    modified since, with unchanged size), Unison performs a new
    transfer rather than failing
  - spurious files are deleted (this can happen if a file is deleted
    on the source replica before resuming the transfer; not deleting
    the file would result in it reappearing on the target replica)

* More file transfer implementation cleanup.  In particular, the
  "paranoid check" (checking whether the file has been correctly
  transferred) is moved to copy.ml.  This way, one can avoid computing
  a file fingerprint twice when a file is already transferred, and
  when using the "transfer by copying" optimization.
  The check of the source file is also moved to copy.ml, so if the
  paranoid check fails, we can tell whether this is due to the source
  file being modified.

-------------------------------
CHANGES FROM VERSION 2.34.0

* Improvement to the code for resuming directory transfers:
  - make sure file information (permissions, ...) has been properly set
    when using a previously transferred temp file
  - make sure previously transferred directories are writable
* Some cleanup in file transfer implementation
* Got rid of all occurrences of "try ... with _ -> ..."
* Removed ctime field from Fileinfo.t
* Fixed bug in Lwt_unix.run which could make it fail with a Not_found
  exception

-------------------------------
CHANGES FROM VERSION 2.34.0

* Fix to the Mac GUI: the bigarray library is now required
-------------------------------
CHANGES FROM VERSION 2.34.0

* Case sensitivity information put in the archive (in a backward
  compatible way) and checked when the archive is loaded

-------------------------------
CHANGES FROM VERSION 2.34.0

* Fixed quotation of paths and names when writing to a preference file
* Workaround for bug in new "select" implementation in Ocaml 3.11
  (select fails with EPIPE error when monitoring a remotely closed
   file descriptor)

-------------------------------
CHANGES FROM VERSION 2.34.0

* Windows Unicode API: when a file cannot be renamed due to a sharing
  violation error or an access denied error, retry for up to 1 second,
  in case the file is temporarily opened by an indexer or an anti-virus.

-------------------------------
CHANGES FROM VERSION 2.34.0

* Text UI: during update detection, display status by updating a
  single line rather than generating a new line of output every so
  often.  That should be less confusing.
* Text UI: in repeat mode, don't save the archives when there is no
  update.  Indeed, in this mode, we should minimize the amount of work
  performed and it is unlikely that the archives have changed much.

-------------------------------
CHANGES FROM VERSION 2.34.0

* Got rid of the 16MiB marshalling limit by marshalling to a bigarray

-------------------------------
CHANGES FROM VERSION 2.34.0

* Use system dependant API for spawning processes.
  (Unicode API under Windows.)
* Fixed the bug with ssh not working when running unison from a cygwin
  shell.
* Move [protect] function (which converts a string to UTF-8 by keeping
  all UTF-8 characters unchanged and considering all other characters
  as ISO 8859-1 characters) from uigtk2.ml to unicode.ml, as it may be
  useful for the other UIs.

-------------------------------
CHANGES FROM VERSION 2.34.0

* Small documentation fix suggested by mszsummer.




-------------------------------
CHANGES FROM VERSION 2.34.0

* Cleaned-up the Unicode selection logic
-------------------------------
CHANGES FROM VERSION 2.34.0

* Bumped minor version: incompatible protocol changes
* The use of the Windows Unicode API is now controlled via the
  "unicode" directive
* Fixed bug in GTK UI: buttons could be incorrectly reenabled during
  synchronization
* Improved error message when trying to synchronize a symlink to a
  Windows machine
* Fixed compilation warnings in lwt_unix.ml and pty.c
* Added some missing convertUnixErrorsToTransient

-------------------------------
CHANGES FROM VERSION 2.33.2

* Small documentation fix suggested by mszsummer.




-------------------------------
CHANGES FROM VERSION 2.33.2

* Added an abstraction layer over Unix/Sys modules in order to be able
  to redefine all system calls involving filenames
* Implemented corresponding bindings for the Windows Unicode API
  (not activated by default yet)
* Uses improved emulation of "select" call provided by Ocaml 3.11
  under Windows (the GUI should not freeze as much during synchronization)

-------------------------------
CHANGES FROM VERSION 2.33.2

* Fixed predicate matching in Unicode case-insensitive mode

-------------------------------
CHANGES FROM VERSION 2.33.2

* Improved error messages when rejecting non-unicode encoded file names
* uigtk2: fixed the code for transcoding from Windows Codepage 1252 to
  UTF-8 (for some reason, I mistakenly took a table corresponding to
  Codepage 1250 instead)
* Windows: added icons with transparency

-------------------------------
CHANGES FROM VERSION 2.33.2

* Incorporate Makefile improvements from Martin von Gagern

-------------------------------
CHANGES FROM VERSION 2.33.1

* Incorporate recent change from 2.32 branch.


-------------------------------
CHANGES FROM VERSION 2.33.-4

* Updated list of bad Windows file names following the MSDN
  documentation (in particular, files with trailing dots are now
  rejected when synchronizing with a Windows machine)
* Experimental Unicode-aware case insensitive mode.  It is activated
  when the preference "unicode" is set to true and Unison is in
  case-insensitive mode.
* Bumped version number to reflect the newly added preference

-------------------------------
CHANGES FROM VERSION 2.32.7

* Move descriptions of recent changes to documentation.


-------------------------------
