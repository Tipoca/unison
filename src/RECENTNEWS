CHANGES FROM VERSION 2.28.6

* More improvements to the OSX GUI from Craig Federighi, including a very 
  nice new "nested directory" display style and per-file progress bars.  Any
  unison hackers using Macs are invited to check out the new UI and post
  any bugs or suggestions for improvement to the unison-hackers list.

  (There is one known issue that sometimes causes the list of changes to be 
  redisplayed incorrectly after an Ignore command.)

-------------------------------
CHANGES FROM VERSION 2.28.5

* Add couple of missing files.


-------------------------------
CHANGES FROM VERSION 2.28.4

* Apply experimental patch from Craig Federighi, which seems to fix
  the deadlocks and crashes in new OSX UI.  (Actually, this is a major
  rewrite and cleanup of the whole Cocoa UI.)  Thanks, Craig!!!

  It would be great if some Mac users could help stress-test this fix.

-------------------------------
CHANGES FROM VERSION 2.28.4

* Apply experimental patch from Craig Federighi, which seems to fix
  the deadlocks and crashes in new OSX UI.  (Actually, this is a major
  rewrite and cleanup of the whole Cocoa UI.)  Thanks, Craig!!!

  It would be great if some Mac users could help stress-test this fix.

-------------------------------
CHANGES FROM VERSION 2.28.3

* Another fix to ctime (non-)handling

-------------------------------
CHANGES FROM VERSION 2.28.1

* Small fix to ctime (non-)handling in update detection under windows
  with fastcheck.  This *might* fix the bug that Karl M. has reported.  
  (Copying fix into trunk.)


-------------------------------
CHANGES FROM VERSION 2.28.-2

* Very preliminary support for triggering Unison from an external 
  filesystem-watching utility.  The current implementation is very
  simple, not efficient, and almost completely untested.  Not ready 
  for real users.  But if someone wants to help me improve it (e.g.,
  by writing a filesystem watcher for your favorite OS), please let
  me know.

  On the Unison side, the new behavior is incredibly simple:
    - use the text UI 
    - start Unison with the command-line flag "-repeat FOO", 
      where FOO is name of a file where Unison should look 
      for notifications of changes
    - when it starts up, Unison will read the whole contents 
      of this file (on both hosts), which should be a 
      newline-separated list of paths (relative to the root 
      of the synchronization) and synchronize just these paths, 
      as if it had been started with the "-path=xxx" option for 
      each one of them
    - when it finishes, it will sleep for a few seconds and then
      examine the watchfile again; if anything has been added, it
      will read the new paths, synchronize them, and go back to 
      sleep
    - that's it!

  To use this to drive Unison "incrementally," just start it in 
  this mode and start up a tool (on each host) to watch for
  new changes to the filesystem and append the appropriate paths
  to the watchfile.  Hopefully such tools should not be too hard
  to write.

  Since I'm an OSX user, I'm particularly interested in writing a 
  watcher tool for this platform.  If anybody knows about 
  programming against the Spotlight API and can give me a hand, 
  that would be much appreciated.

-------------------------------
