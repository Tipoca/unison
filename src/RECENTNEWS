CHANGES FROM VERSION 2.46.10

* File system monitoring: more robust communication with the helper program
  (in socket mode, the unison server will still work properly despite
  unexpected unison client disconnections)

-------------------------------
CHANGES FROM VERSION 2.46.9

* Use hash function from OCaml 3.x for comparing archives, even when
  compiled with OCaml 4.x

-------------------------------
CHANGES FROM VERSION 2.46.8

* Filesystem monitoring: do not use filters on maps, for compatibility
  with OCaml 3.11

-------------------------------
CHANGES FROM VERSION 2.46.6

* A bytecode version of unison-fsmonitor is now produced by "make NATIVE=false"

-------------------------------
CHANGES FROM VERSION 2.46.4

* Windows/lwt: correctly deals with Sys.Break exceptions when sleeping
* File system monitoring: improved search for unison-fsmonitor 
* File system monitoring: detect when the helper process exits
* Do not restart Unison in case of uncaught exception when the repeat
  preference is set.  This seems safer.  And it does not work, for
  instance, in case of lost connection.

-------------------------------
CHANGES FROM VERSION 2.46.3

* Add a note to the 'new archives not identical' error message
  explaining that this can happen because Unison binaries compiled
  with OCaml 3 and OCaml 4 are incompatible.


-------------------------------
CHANGES FROM VERSION 2.46.2

* Fix Unix.readlink invalid argument error under Windows

-------------------------------
CHANGES FROM VERSION 2.46.1

* More robust file watching helper programs for Windows and Linux.
  They communicate with Unison through pipes (Unison redirects stdin
  and stdout), using a race-free protocol.

-------------------------------
CHANGES FROM VERSION 2.46.0

* Added a "copyonconflict" preference, to make a copy of files that would
  otherwise be overwritten or deleted in case of conflicting changes.
  (This makes it possible to automatically resolve conflicts in a
   fairly safe way when synchronizing continuously, in combination
   with the "repeat = watch" and "prefer = newer" preferences.

-------------------------------
CHANGES FROM VERSION 2.46.-1

* Bumped version number: incompatible protocol changes
* Improvements to the file watching functionality:
  - retries paths with failures using an exponential backoff algorithm
  - the information returned by the file watchers are used
    independently for each replica; thus, when only one replica has
    changes, Unison will only rescan this replica
  - when available, used by the graphical UIs to speed up rescanning
    (can be disabled by setting the new 'watch' preference to false)

-------------------------------
CHANGES FROM VERSION 2.45.15

* transfer.ml: updated debugging code; in particular, turns an
  assertion failure into a more friendly transient failure

-------------------------------
CHANGES FROM VERSION 2.45.14

* Function External.readChannelTillEof now tail recursive
  (prevents a crash when the output of the diff program is too large)

-------------------------------
CHANGES FROM VERSION 2.45.13

* Fixed Makefile for cross-compiling towards Windows (updated to MinGW-w64)

-------------------------------
CHANGES FROM VERSION 2.45.12

* fsmonitor.py: fixed busy wait under Windows
* fsmonitor.py: make sure this helper program exits when Unison terminates
  (now, fsmonitor.py exits when stdin is closed, and Unison redirects stdin)

-------------------------------
CHANGES FROM VERSION 2.45.11

* Fix bug in Lwt_unix.sleep

-------------------------------
CHANGES FROM VERSION 2.45.9

* Added some more debugging code in transfer.ml
-------------------------------
CHANGES FROM VERSION 2.45.7

* Small fix to the way fsmonitor.py gets invoked when using the file
  watching functionality, suggested by Josh Berdine.  Unison will now
  look for fsmonitor.py in the same directory where the Unison
  executable itself lives.
-------------------------------
CHANGES FROM VERSION 2.45.7

* Small fix to the way fsmonitor.py gets invoked when using the file
  watching functionality, suggested by Josh Berdine.  Unison will now
  look for fsmonitor.py in the same directory where the Unison
  executable itself lives.

* Fix bug in last commit

* Added some debugging code in transfer.ml

* Display full stack backtraces when printing exceptions, per comment
  from Jerome

- fixed a bug in the lookup of the host name on the server

